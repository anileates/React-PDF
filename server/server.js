import express from "express";
import fs from "fs";
import path from "path";

import React from "react";
import ReactDOMServer from "react-dom/server";

import App from "../src/App";

import puppeteer from "puppeteer";
import now from "performance-now";

const app = express();
app.use(express.json());

const options = {
  format: "A4",
  headerTemplate: "<p></p>",
  footerTemplate: "<p></p>",
  displayHeaderFooter: false,
  margin: {
    top: "40px",
    bottom: "100px",
  },
  printBackground: true,
  path: "invoice.pdf", // remove path property to return PDF instead saving it locally
};

app.post("/create-invoice", async (req, res, next) => {
  const { customerName, amount } = req.body;

  let start = now();
  const finalHtml = ReactDOMServer.renderToString(
    <App customerName={customerName} amount={amount} />
  )

  console.log(`Time to compile the React template ${now() - start} ms`);

  // Launch Puppeteer
  const browser = await puppeteer.launch({
    args: ["--no-sandbox"],
  });

  // Create a new blank page and set the content with the HTML generated by Handlebars
  const page = await browser.newPage();
  await page.goto(`data:text/html;charset=UTF-8,${finalHtml}`);

  // create PDF
  const pdf = await page.pdf(options);
  await browser.close();

  res.contentType("application/pdf");
  return res.send(pdf);
});

app.use(express.static(path.resolve(__dirname, "..", "build")));

app.listen(3000, () => console.log("Server is listening on port: 3000"));
